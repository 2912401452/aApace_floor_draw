{"ast":null,"code":"var meta = require('turf-meta');\n/**\n * Combines a {@link FeatureCollection} of {@link Point},\n * {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or\n * {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<(Point|LineString|Polygon)>} fc a FeatureCollection of any type\n * @return {FeatureCollection<(MultiPoint|MultiLineString|MultiPolygon)>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.026432, 47.49134]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.074497, 47.509548]\n *       }\n *     }\n *   ]\n * };\n *\n * var combined = turf.combine(fc);\n *\n * //=combined\n */\n\n\nmodule.exports = function (fc) {\n  var groups = {\n    MultiPoint: {\n      coordinates: [],\n      properties: []\n    },\n    MultiLineString: {\n      coordinates: [],\n      properties: []\n    },\n    MultiPolygon: {\n      coordinates: [],\n      properties: []\n    }\n  };\n  var multiMapping = Object.keys(groups).reduce(function (memo, item) {\n    memo[item.replace('Multi', '')] = item;\n    return memo;\n  }, {});\n\n  function addToGroup(feature, key, multi) {\n    if (!multi) {\n      groups[key].coordinates.push(feature.geometry.coordinates);\n    } else {\n      groups[key].coordinates = groups[key].coordinates.concat(feature.geometry.coordinates);\n    }\n\n    groups[key].properties.push(feature.properties);\n  }\n\n  meta.featureEach(fc, function (feature) {\n    if (!feature.geometry) return;\n\n    if (groups[feature.geometry.type]) {\n      addToGroup(feature, feature.geometry.type, true);\n    } else if (multiMapping[feature.geometry.type]) {\n      addToGroup(feature, multiMapping[feature.geometry.type], false);\n    }\n  });\n  return {\n    type: 'FeatureCollection',\n    features: Object.keys(groups).filter(function (key) {\n      return groups[key].coordinates.length;\n    }).sort().map(function (key) {\n      return {\n        type: 'Feature',\n        properties: {\n          collectedProperties: groups[key].properties\n        },\n        geometry: {\n          type: key,\n          coordinates: groups[key].coordinates\n        }\n      };\n    })\n  };\n};","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/aApace_floor_draw/node_modules/turf-combine/index.js"],"names":["meta","require","module","exports","fc","groups","MultiPoint","coordinates","properties","MultiLineString","MultiPolygon","multiMapping","Object","keys","reduce","memo","item","replace","addToGroup","feature","key","multi","push","geometry","concat","featureEach","type","features","filter","length","sort","map","collectedProperties"],"mappings":"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","sourcesContent":["var meta = require('turf-meta');\n\n/**\n * Combines a {@link FeatureCollection} of {@link Point},\n * {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or\n * {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<(Point|LineString|Polygon)>} fc a FeatureCollection of any type\n * @return {FeatureCollection<(MultiPoint|MultiLineString|MultiPolygon)>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.026432, 47.49134]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Point\",\n *         \"coordinates\": [19.074497, 47.509548]\n *       }\n *     }\n *   ]\n * };\n *\n * var combined = turf.combine(fc);\n *\n * //=combined\n */\n\nmodule.exports = function (fc) {\n    var groups = {\n        MultiPoint: {coordinates: [], properties: []},\n        MultiLineString: {coordinates: [], properties: []},\n        MultiPolygon: {coordinates: [], properties: []}\n    };\n\n    var multiMapping = Object.keys(groups).reduce(function (memo, item) {\n        memo[item.replace('Multi', '')] = item;\n        return memo;\n    }, {});\n\n    function addToGroup(feature, key, multi) {\n        if (!multi) {\n            groups[key].coordinates.push(feature.geometry.coordinates);\n        } else {\n            groups[key].coordinates = groups[key].coordinates.concat(feature.geometry.coordinates);\n        }\n        groups[key].properties.push(feature.properties);\n    }\n\n    meta.featureEach(fc, function (feature) {\n        if (!feature.geometry) return;\n        if (groups[feature.geometry.type]) {\n            addToGroup(feature, feature.geometry.type, true);\n        } else if (multiMapping[feature.geometry.type]) {\n            addToGroup(feature, multiMapping[feature.geometry.type], false);\n        }\n    });\n\n    return {\n        type: 'FeatureCollection',\n        features: Object.keys(groups)\n            .filter(function (key) {\n                return groups[key].coordinates.length;\n            })\n            .sort()\n            .map(function (key) {\n                return {\n                    type: 'Feature',\n                    properties: {\n                        collectedProperties: groups[key].properties\n                    },\n                    geometry: {\n                        type: key,\n                        coordinates: groups[key].coordinates\n                    }\n                };\n            })\n    };\n};\n"]},"metadata":{},"sourceType":"script"}