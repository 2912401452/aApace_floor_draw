{"ast":null,"code":"var featureCollection = require('turf-helpers').featureCollection;\n\nvar each = require('turf-meta').coordEach;\n\nvar point = require('turf-helpers').point;\n/**\n * Takes a feature or set of features and returns all positions as\n * {@link Point|points}.\n *\n * @name explode\n * @param {(Feature|FeatureCollection)} geojson input features\n * @return {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [177.434692, -17.77517],\n *       [177.402076, -17.779093],\n *       [177.38079, -17.803937],\n *       [177.40242, -17.826164],\n *       [177.438468, -17.824857],\n *       [177.454948, -17.796746],\n *       [177.434692, -17.77517]\n *     ]]\n *   }\n * };\n *\n * var points = turf.explode(poly);\n *\n * //=poly\n *\n * //=points\n */\n\n\nmodule.exports = function (geojson) {\n  var points = [];\n  each(geojson, function (coord) {\n    points.push(point(coord));\n  });\n  return featureCollection(points);\n};","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/floorcanvas/node_modules/turf-explode/index.js"],"names":["featureCollection","require","each","coordEach","point","module","exports","geojson","points","coord","push"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBD,iBAAhD;;AACA,IAAIE,IAAI,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqBE,SAAhC;;AACA,IAAIC,KAAK,GAAGH,OAAO,CAAC,cAAD,CAAP,CAAwBG,KAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAChC,MAAIC,MAAM,GAAG,EAAb;AACAN,EAAAA,IAAI,CAACK,OAAD,EAAU,UAAUE,KAAV,EAAiB;AAC3BD,IAAAA,MAAM,CAACE,IAAP,CAAYN,KAAK,CAACK,KAAD,CAAjB;AACH,GAFG,CAAJ;AAGA,SAAOT,iBAAiB,CAACQ,MAAD,CAAxB;AACH,CAND","sourcesContent":["var featureCollection = require('turf-helpers').featureCollection;\nvar each = require('turf-meta').coordEach;\nvar point = require('turf-helpers').point;\n\n/**\n * Takes a feature or set of features and returns all positions as\n * {@link Point|points}.\n *\n * @name explode\n * @param {(Feature|FeatureCollection)} geojson input features\n * @return {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [177.434692, -17.77517],\n *       [177.402076, -17.779093],\n *       [177.38079, -17.803937],\n *       [177.40242, -17.826164],\n *       [177.438468, -17.824857],\n *       [177.454948, -17.796746],\n *       [177.434692, -17.77517]\n *     ]]\n *   }\n * };\n *\n * var points = turf.explode(poly);\n *\n * //=poly\n *\n * //=points\n */\nmodule.exports = function (geojson) {\n    var points = [];\n    each(geojson, function (coord) {\n        points.push(point(coord));\n    });\n    return featureCollection(points);\n};\n"]},"metadata":{},"sourceType":"script"}