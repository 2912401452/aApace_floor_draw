{"ast":null,"code":"/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon needs to have properties `a`, `b`, and `c`\n * that define the values at its three corners.\n *\n * @name planepoint\n * @param {Feature<Point>} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @return {Number} the z-value for `interpolatedPoint`\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.3221, 39.529]\n *   }\n * };\n * var point = turf.point([-75.3221, 39.529]);\n * // triangle is a polygon with \"a\", \"b\",\n * // and \"c\" values representing\n * // the values of the coordinates in order.\n * var triangle = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"a\": 11,\n *     \"b\": 122,\n *     \"c\": 44\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-75.1221, 39.57],\n *       [-75.58, 39.18],\n *       [-75.97, 39.86],\n *       [-75.1221, 39.57]\n *     ]]\n *   }\n * };\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [triangle, point]\n * };\n *\n * var zValue = turf.planepoint(point, triangle);\n *\n * //=features\n *\n * //=zValue\n */\nmodule.exports = function (point, triangle) {\n  var x = point.geometry.coordinates[0],\n      y = point.geometry.coordinates[1],\n      x1 = triangle.geometry.coordinates[0][0][0],\n      y1 = triangle.geometry.coordinates[0][0][1],\n      z1 = triangle.properties.a,\n      x2 = triangle.geometry.coordinates[0][1][0],\n      y2 = triangle.geometry.coordinates[0][1][1],\n      z2 = triangle.properties.b,\n      x3 = triangle.geometry.coordinates[0][2][0],\n      y3 = triangle.geometry.coordinates[0][2][1],\n      z3 = triangle.properties.c;\n  var z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) - z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) / ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) - (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n  return z;\n};","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/aApace_floor_draw/node_modules/turf-planepoint/index.js"],"names":["module","exports","point","triangle","x","geometry","coordinates","y","x1","y1","z1","properties","a","x2","y2","z2","b","x3","y3","z3","c","z"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACxC,MAAIC,CAAC,GAAGF,KAAK,CAACG,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CAAR;AAAA,MACIC,CAAC,GAAGL,KAAK,CAACG,QAAN,CAAeC,WAAf,CAA2B,CAA3B,CADR;AAAA,MAEIE,EAAE,GAAGL,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAFT;AAAA,MAGIG,EAAE,GAAGN,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAHT;AAAA,MAIII,EAAE,GAAGP,QAAQ,CAACQ,UAAT,CAAoBC,CAJ7B;AAAA,MAKIC,EAAE,GAAGV,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CALT;AAAA,MAMIQ,EAAE,GAAGX,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CANT;AAAA,MAOIS,EAAE,GAAGZ,QAAQ,CAACQ,UAAT,CAAoBK,CAP7B;AAAA,MAQIC,EAAE,GAAGd,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CART;AAAA,MASIY,EAAE,GAAGf,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CATT;AAAA,MAUIa,EAAE,GAAGhB,QAAQ,CAACQ,UAAT,CAAoBS,CAV7B;AAYA,MAAIC,CAAC,GAAG,CAACF,EAAE,IAAIf,CAAC,GAAGI,EAAR,CAAF,IAAiBD,CAAC,GAAGO,EAArB,IAA2BJ,EAAE,IAAIN,CAAC,GAAGS,EAAR,CAAF,IAAiBN,CAAC,GAAGW,EAArB,CAA3B,GAAsDH,EAAE,IAAIX,CAAC,GAAGa,EAAR,CAAF,IAAiBV,CAAC,GAAGE,EAArB,CAAtD,GACPM,EAAE,IAAIX,CAAC,GAAGI,EAAR,CAAF,IAAiBD,CAAC,GAAGW,EAArB,CADO,GACoBC,EAAE,IAAIf,CAAC,GAAGS,EAAR,CAAF,IAAiBN,CAAC,GAAGE,EAArB,CADpB,GAC+CC,EAAE,IAAIN,CAAC,GAAGa,EAAR,CAAF,IAAiBV,CAAC,GAAGO,EAArB,CADhD,KAEL,CAACV,CAAC,GAAGI,EAAL,KAAYD,CAAC,GAAGO,EAAhB,IAAsB,CAACV,CAAC,GAAGS,EAAL,KAAYN,CAAC,GAAGW,EAAhB,CAAtB,GAA4C,CAACd,CAAC,GAAGa,EAAL,KAAYV,CAAC,GAAGE,EAAhB,CAA5C,GACA,CAACL,CAAC,GAAGI,EAAL,KAAYD,CAAC,GAAGW,EAAhB,CADA,GACsB,CAACd,CAAC,GAAGS,EAAL,KAAYN,CAAC,GAAGE,EAAhB,CADtB,GAC4C,CAACL,CAAC,GAAGa,EAAL,KAAYV,CAAC,GAAGO,EAAhB,CAHvC,CAAR;AAKA,SAAOO,CAAP;AACH,CAnBD","sourcesContent":["/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon needs to have properties `a`, `b`, and `c`\n * that define the values at its three corners.\n *\n * @name planepoint\n * @param {Feature<Point>} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @return {Number} the z-value for `interpolatedPoint`\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.3221, 39.529]\n *   }\n * };\n * var point = turf.point([-75.3221, 39.529]);\n * // triangle is a polygon with \"a\", \"b\",\n * // and \"c\" values representing\n * // the values of the coordinates in order.\n * var triangle = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"a\": 11,\n *     \"b\": 122,\n *     \"c\": 44\n *   },\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [-75.1221, 39.57],\n *       [-75.58, 39.18],\n *       [-75.97, 39.86],\n *       [-75.1221, 39.57]\n *     ]]\n *   }\n * };\n *\n * var features = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [triangle, point]\n * };\n *\n * var zValue = turf.planepoint(point, triangle);\n *\n * //=features\n *\n * //=zValue\n */\nmodule.exports = function (point, triangle) {\n    var x = point.geometry.coordinates[0],\n        y = point.geometry.coordinates[1],\n        x1 = triangle.geometry.coordinates[0][0][0],\n        y1 = triangle.geometry.coordinates[0][0][1],\n        z1 = triangle.properties.a,\n        x2 = triangle.geometry.coordinates[0][1][0],\n        y2 = triangle.geometry.coordinates[0][1][1],\n        z2 = triangle.properties.b,\n        x3 = triangle.geometry.coordinates[0][2][0],\n        y3 = triangle.geometry.coordinates[0][2][1],\n        z3 = triangle.properties.c;\n\n    var z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) -\n      z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) /\n      ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) -\n       (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n\n    return z;\n};\n"]},"metadata":{},"sourceType":"script"}