{"ast":null,"code":"var each = require('turf-meta').coordEach;\n\nvar point = require('turf-helpers').point;\n/**\n * Takes one or more features and calculates the centroid using\n * the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating\n * the centroid of a set of polygons.\n *\n * @name centroid\n * @param {(Feature|FeatureCollection)} features input features\n * @return {Feature<Point>} the centroid of the input features\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [105.818939,21.004714],\n *       [105.818939,21.061754],\n *       [105.890007,21.061754],\n *       [105.890007,21.004714],\n *       [105.818939,21.004714]\n *     ]]\n *   }\n * };\n *\n * var centroidPt = turf.centroid(poly);\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly, centroidPt]\n * };\n *\n * //=result\n */\n\n\nmodule.exports = function (features) {\n  var xSum = 0,\n      ySum = 0,\n      len = 0;\n  each(features, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  }, true);\n  return point([xSum / len, ySum / len]);\n};","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/floorcanvas/node_modules/turf-centroid/index.js"],"names":["each","require","coordEach","point","module","exports","features","xSum","ySum","len","coord"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,SAAhC;;AACA,IAAIC,KAAK,GAAGF,OAAO,CAAC,cAAD,CAAP,CAAwBE,KAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoB;AACjC,MAAIC,IAAI,GAAG,CAAX;AAAA,MAAcC,IAAI,GAAG,CAArB;AAAA,MAAwBC,GAAG,GAAG,CAA9B;AACAT,EAAAA,IAAI,CAACM,QAAD,EAAW,UAAUI,KAAV,EAAiB;AAC5BH,IAAAA,IAAI,IAAIG,KAAK,CAAC,CAAD,CAAb;AACAF,IAAAA,IAAI,IAAIE,KAAK,CAAC,CAAD,CAAb;AACAD,IAAAA,GAAG;AACN,GAJG,EAID,IAJC,CAAJ;AAKA,SAAON,KAAK,CAAC,CAACI,IAAI,GAAGE,GAAR,EAAaD,IAAI,GAAGC,GAApB,CAAD,CAAZ;AACH,CARD","sourcesContent":["var each = require('turf-meta').coordEach;\nvar point = require('turf-helpers').point;\n\n/**\n * Takes one or more features and calculates the centroid using\n * the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating\n * the centroid of a set of polygons.\n *\n * @name centroid\n * @param {(Feature|FeatureCollection)} features input features\n * @return {Feature<Point>} the centroid of the input features\n * @example\n * var poly = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Polygon\",\n *     \"coordinates\": [[\n *       [105.818939,21.004714],\n *       [105.818939,21.061754],\n *       [105.890007,21.061754],\n *       [105.890007,21.004714],\n *       [105.818939,21.004714]\n *     ]]\n *   }\n * };\n *\n * var centroidPt = turf.centroid(poly);\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [poly, centroidPt]\n * };\n *\n * //=result\n */\nmodule.exports = function (features) {\n    var xSum = 0, ySum = 0, len = 0;\n    each(features, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len]);\n};\n"]},"metadata":{},"sourceType":"script"}