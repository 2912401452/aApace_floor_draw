{"ast":null,"code":"var geometryArea = require('geojson-area').geometry;\n/**\n * Takes a one or more features and returns their area\n * in square meters.\n *\n * @param {(Feature|FeatureCollection)} input input features\n * @return {Number} area in square meters\n * @example\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-67.031021, 10.458102],\n *           [-67.031021, 10.53372],\n *           [-66.929397, 10.53372],\n *           [-66.929397, 10.458102],\n *           [-67.031021, 10.458102]\n *         ]]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-66.919784, 10.397325],\n *           [-66.919784, 10.513467],\n *           [-66.805114, 10.513467],\n *           [-66.805114, 10.397325],\n *           [-66.919784, 10.397325]\n *         ]]\n *       }\n *     }\n *   ]\n * };\n *\n * var area = turf.area(polygons);\n *\n * //=area\n */\n\n\nfunction area(input) {\n  if (input.type === 'FeatureCollection') {\n    for (var i = 0, sum = 0; i < input.features.length; i++) {\n      if (input.features[i].geometry) {\n        sum += geometryArea(input.features[i].geometry);\n      }\n    }\n\n    return sum;\n  } else if (input.type === 'Feature') {\n    return geometryArea(input.geometry);\n  } else {\n    return geometryArea(input);\n  }\n}\n\nmodule.exports = area;","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/aApace_floor_draw/node_modules/turf-area/index.js"],"names":["geometryArea","require","geometry","area","input","type","i","sum","features","length","module","exports"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,QAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAIA,KAAK,CAACC,IAAN,KAAe,mBAAnB,EAAwC;AACpC,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,CAAtB,EAAyBD,CAAC,GAAGF,KAAK,CAACI,QAAN,CAAeC,MAA5C,EAAoDH,CAAC,EAArD,EAAyD;AACrD,UAAIF,KAAK,CAACI,QAAN,CAAeF,CAAf,EAAkBJ,QAAtB,EAAgC;AAC5BK,QAAAA,GAAG,IAAIP,YAAY,CAACI,KAAK,CAACI,QAAN,CAAeF,CAAf,EAAkBJ,QAAnB,CAAnB;AACH;AACJ;;AACD,WAAOK,GAAP;AACH,GAPD,MAOO,IAAIH,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACjC,WAAOL,YAAY,CAACI,KAAK,CAACF,QAAP,CAAnB;AACH,GAFM,MAEA;AACH,WAAOF,YAAY,CAACI,KAAD,CAAnB;AACH;AACJ;;AACDM,MAAM,CAACC,OAAP,GAAiBR,IAAjB","sourcesContent":["var geometryArea = require('geojson-area').geometry;\n\n/**\n * Takes a one or more features and returns their area\n * in square meters.\n *\n * @param {(Feature|FeatureCollection)} input input features\n * @return {Number} area in square meters\n * @example\n * var polygons = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [\n *     {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-67.031021, 10.458102],\n *           [-67.031021, 10.53372],\n *           [-66.929397, 10.53372],\n *           [-66.929397, 10.458102],\n *           [-67.031021, 10.458102]\n *         ]]\n *       }\n *     }, {\n *       \"type\": \"Feature\",\n *       \"properties\": {},\n *       \"geometry\": {\n *         \"type\": \"Polygon\",\n *         \"coordinates\": [[\n *           [-66.919784, 10.397325],\n *           [-66.919784, 10.513467],\n *           [-66.805114, 10.513467],\n *           [-66.805114, 10.397325],\n *           [-66.919784, 10.397325]\n *         ]]\n *       }\n *     }\n *   ]\n * };\n *\n * var area = turf.area(polygons);\n *\n * //=area\n */\nfunction area(input) {\n    if (input.type === 'FeatureCollection') {\n        for (var i = 0, sum = 0; i < input.features.length; i++) {\n            if (input.features[i].geometry) {\n                sum += geometryArea(input.features[i].geometry);\n            }\n        }\n        return sum;\n    } else if (input.type === 'Feature') {\n        return geometryArea(input.geometry);\n    } else {\n        return geometryArea(input);\n    }\n}\nmodule.exports = area;\n"]},"metadata":{},"sourceType":"script"}