{"ast":null,"code":"var getCoord = require('turf-invariant').getCoord; //http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them.\n *\n * @name bearing\n * @param {Feature<Point>} start starting Point\n * @param {Feature<Point>} end ending Point\n * @returns {Number} bearing in decimal degrees\n * @example\n * var point1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#f00'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var point2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#0f0'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n *\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [point1, point2]\n * };\n *\n * //=points\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //=bearing\n */\n\n\nmodule.exports = function (start, end) {\n  var degrees2radians = Math.PI / 180;\n  var radians2degrees = 180 / Math.PI;\n  var coordinates1 = getCoord(start);\n  var coordinates2 = getCoord(end);\n  var lon1 = degrees2radians * coordinates1[0];\n  var lon2 = degrees2radians * coordinates2[0];\n  var lat1 = degrees2radians * coordinates1[1];\n  var lat2 = degrees2radians * coordinates2[1];\n  var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n  var b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n  var bearing = radians2degrees * Math.atan2(a, b);\n  return bearing;\n};","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/floorcanvas/node_modules/turf-bearing/index.js"],"names":["getCoord","require","module","exports","start","end","degrees2radians","Math","PI","radians2degrees","coordinates1","coordinates2","lon1","lon2","lat1","lat2","a","sin","cos","b","bearing","atan2"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,QAAzC,C,CACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACnC,MAAIC,eAAe,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAhC;AACA,MAAIC,eAAe,GAAG,MAAMF,IAAI,CAACC,EAAjC;AACA,MAAIE,YAAY,GAAGV,QAAQ,CAACI,KAAD,CAA3B;AACA,MAAIO,YAAY,GAAGX,QAAQ,CAACK,GAAD,CAA3B;AAEA,MAAIO,IAAI,GAAGN,eAAe,GAAGI,YAAY,CAAC,CAAD,CAAzC;AACA,MAAIG,IAAI,GAAGP,eAAe,GAAGK,YAAY,CAAC,CAAD,CAAzC;AACA,MAAIG,IAAI,GAAGR,eAAe,GAAGI,YAAY,CAAC,CAAD,CAAzC;AACA,MAAIK,IAAI,GAAGT,eAAe,GAAGK,YAAY,CAAC,CAAD,CAAzC;AACA,MAAIK,CAAC,GAAGT,IAAI,CAACU,GAAL,CAASJ,IAAI,GAAGD,IAAhB,IAAwBL,IAAI,CAACW,GAAL,CAASH,IAAT,CAAhC;AACA,MAAII,CAAC,GAAGZ,IAAI,CAACW,GAAL,CAASJ,IAAT,IAAiBP,IAAI,CAACU,GAAL,CAASF,IAAT,CAAjB,GACJR,IAAI,CAACU,GAAL,CAASH,IAAT,IAAiBP,IAAI,CAACW,GAAL,CAASH,IAAT,CAAjB,GAAkCR,IAAI,CAACW,GAAL,CAASL,IAAI,GAAGD,IAAhB,CADtC;AAGA,MAAIQ,OAAO,GAAGX,eAAe,GAAGF,IAAI,CAACc,KAAL,CAAWL,CAAX,EAAcG,CAAd,CAAhC;AAEA,SAAOC,OAAP;AACH,CAjBD","sourcesContent":["var getCoord = require('turf-invariant').getCoord;\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them.\n *\n * @name bearing\n * @param {Feature<Point>} start starting Point\n * @param {Feature<Point>} end ending Point\n * @returns {Number} bearing in decimal degrees\n * @example\n * var point1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#f00'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.343, 39.984]\n *   }\n * };\n * var point2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {\n *     \"marker-color\": '#0f0'\n *   },\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [-75.534, 39.123]\n *   }\n * };\n *\n * var points = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [point1, point2]\n * };\n *\n * //=points\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //=bearing\n */\nmodule.exports = function (start, end) {\n    var degrees2radians = Math.PI / 180;\n    var radians2degrees = 180 / Math.PI;\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n\n    var lon1 = degrees2radians * coordinates1[0];\n    var lon2 = degrees2radians * coordinates2[0];\n    var lat1 = degrees2radians * coordinates1[1];\n    var lat2 = degrees2radians * coordinates2[1];\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n    var bearing = radians2degrees * Math.atan2(a, b);\n\n    return bearing;\n};\n"]},"metadata":{},"sourceType":"script"}