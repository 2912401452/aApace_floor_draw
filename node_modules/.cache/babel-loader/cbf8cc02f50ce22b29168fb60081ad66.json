{"ast":null,"code":"var bearing = require('turf-bearing');\n\nvar destination = require('turf-destination');\n\nvar distance = require('turf-distance');\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Feature<Point>} from first point\n * @param {Feature<Point>} to second point\n * @return {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var pt1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [144.834823, -37.771257]\n *   }\n * };\n * var pt2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [145.14244, -37.830937]\n *   }\n * };\n *\n * var midpointed = turf.midpoint(pt1, pt2);\n * midpointed.properties['marker-color'] = '#f00';\n *\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [pt1, pt2, midpointed]\n * };\n *\n * //=result\n */\n\n\nmodule.exports = function (from, to) {\n  var dist = distance(from, to, 'miles');\n  var heading = bearing(from, to);\n  var midpoint = destination(from, dist / 2, heading, 'miles');\n  return midpoint;\n};","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/aApace_floor_draw/node_modules/turf-midpoint/index.js"],"names":["bearing","require","destination","distance","module","exports","from","to","dist","heading","midpoint"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,eAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACjC,MAAIC,IAAI,GAAGL,QAAQ,CAACG,IAAD,EAAOC,EAAP,EAAW,OAAX,CAAnB;AACA,MAAIE,OAAO,GAAGT,OAAO,CAACM,IAAD,EAAOC,EAAP,CAArB;AACA,MAAIG,QAAQ,GAAGR,WAAW,CAACI,IAAD,EAAOE,IAAI,GAAG,CAAd,EAAiBC,OAAjB,EAA0B,OAA1B,CAA1B;AAEA,SAAOC,QAAP;AACH,CAND","sourcesContent":["var bearing = require('turf-bearing');\nvar destination = require('turf-destination');\nvar distance = require('turf-distance');\n\n/**\n * Takes two {@link Point|points} and returns a point midway between them.\n * The midpoint is calculated geodesically, meaning the curvature of the earth is taken into account.\n *\n * @name midpoint\n * @param {Feature<Point>} from first point\n * @param {Feature<Point>} to second point\n * @return {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * var pt1 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [144.834823, -37.771257]\n *   }\n * };\n * var pt2 = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [145.14244, -37.830937]\n *   }\n * };\n *\n * var midpointed = turf.midpoint(pt1, pt2);\n * midpointed.properties['marker-color'] = '#f00';\n *\n *\n * var result = {\n *   \"type\": \"FeatureCollection\",\n *   \"features\": [pt1, pt2, midpointed]\n * };\n *\n * //=result\n */\nmodule.exports = function (from, to) {\n    var dist = distance(from, to, 'miles');\n    var heading = bearing(from, to);\n    var midpoint = destination(from, dist / 2, heading, 'miles');\n\n    return midpoint;\n};\n"]},"metadata":{},"sourceType":"script"}