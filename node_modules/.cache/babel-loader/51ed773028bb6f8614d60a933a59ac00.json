{"ast":null,"code":"/* eslint-disable */\n\n/**\n  * BezierSpline\n  * https://github.com/leszekr/bezier-spline-js\n  *\n  * @private\n  * @copyright\n  * Copyright (c) 2013 Leszek Rybicki\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in all\n  * copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  * SOFTWARE.\n  */\nvar Spline = function (options) {\n  this.points = options.points || [];\n  this.duration = options.duration || 10000;\n  this.sharpness = options.sharpness || 0.85;\n  this.centers = [];\n  this.controls = [];\n  this.stepLength = options.stepLength || 60;\n  this.length = this.points.length;\n  this.delay = 0; // this is to ensure compatibility with the 2d version\n\n  for (var i = 0; i < this.length; i++) this.points[i].z = this.points[i].z || 0;\n\n  for (var i = 0; i < this.length - 1; i++) {\n    var p1 = this.points[i];\n    var p2 = this.points[i + 1];\n    this.centers.push({\n      x: (p1.x + p2.x) / 2,\n      y: (p1.y + p2.y) / 2,\n      z: (p1.z + p2.z) / 2\n    });\n  }\n\n  this.controls.push([this.points[0], this.points[0]]);\n\n  for (var i = 0; i < this.centers.length - 1; i++) {\n    var p1 = this.centers[i];\n    var p2 = this.centers[i + 1];\n    var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n    var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n    var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n    this.controls.push([{\n      x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n      y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n      z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)\n    }, {\n      x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n      y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n      z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)\n    }]);\n  }\n\n  this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n  this.steps = this.cacheSteps(this.stepLength);\n  return this;\n};\n/*\n  Caches an array of equidistant (more or less) points on the curve.\n*/\n\n\nSpline.prototype.cacheSteps = function (mindist) {\n  var steps = [];\n  var laststep = this.pos(0);\n  steps.push(0);\n\n  for (var t = 0; t < this.duration; t += 10) {\n    var step = this.pos(t);\n    var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n\n    if (dist > mindist) {\n      steps.push(t);\n      laststep = step;\n    }\n  }\n\n  return steps;\n};\n/*\n  returns angle and speed in the given point in the curve\n*/\n\n\nSpline.prototype.vector = function (t) {\n  var p1 = this.pos(t + 10);\n  var p2 = this.pos(t - 10);\n  return {\n    angle: 180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n    speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n  };\n};\n/*\n  Gets the position of the point, given time.\n   WARNING: The speed is not constant. The time it takes between control points is constant.\n   For constant speed, use Spline.steps[i];\n*/\n\n\nSpline.prototype.pos = function (time) {\n  function bezier(t, p1, c1, c2, p2) {\n    var B = function (t) {\n      var t2 = t * t,\n          t3 = t2 * t;\n      return [t3, 3 * t2 * (1 - t), 3 * t * (1 - t) * (1 - t), (1 - t) * (1 - t) * (1 - t)];\n    };\n\n    var b = B(t);\n    var pos = {\n      x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n      y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n      z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n    };\n    return pos;\n  }\n\n  var t = time - this.delay;\n  if (t < 0) t = 0;\n  if (t > this.duration) t = this.duration - 1; //t = t-this.delay;\n\n  var t2 = t / this.duration;\n  if (t2 >= 1) return this.points[this.length - 1];\n  var n = Math.floor((this.points.length - 1) * t2);\n  var t1 = (this.length - 1) * t2 - n;\n  return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n};\n\nmodule.exports = Spline;","map":{"version":3,"sources":["/Users/yiqianyao/workspace/something/floorcanvas/node_modules/turf-bezier/spline.js"],"names":["Spline","options","points","duration","sharpness","centers","controls","stepLength","length","delay","i","z","p1","p2","push","x","y","dx","dy","dz","steps","cacheSteps","prototype","mindist","laststep","pos","t","step","dist","Math","sqrt","vector","angle","atan2","speed","time","bezier","c1","c2","B","t2","t3","b","n","floor","t1","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\n /**\n   * BezierSpline\n   * https://github.com/leszekr/bezier-spline-js\n   *\n   * @private\n   * @copyright\n   * Copyright (c) 2013 Leszek Rybicki\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\nvar Spline = function (options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 10000;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0;\n    // this is to ensure compatibility with the 2d version\n    for (var i = 0; i < this.length; i++) this.points[i].z = this.points[i].z || 0;\n    for (var i = 0; i < this.length - 1; i++) {\n        var p1 = this.points[i];\n        var p2 = this.points[i + 1];\n        this.centers.push({\n            x: (p1.x + p2.x) / 2,\n            y: (p1.y + p2.y) / 2,\n            z: (p1.z + p2.z) / 2\n        });\n    }\n    this.controls.push([this.points[0], this.points[0]]);\n    for (var i = 0; i < this.centers.length - 1; i++) {\n        var p1 = this.centers[i];\n        var p2 = this.centers[i + 1];\n        var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n        var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n        var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n        this.controls.push([{\n            x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n            y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n            z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)},\n            {\n                x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n                y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n                z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)}]);\n    }\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n};\n\n  /*\n    Caches an array of equidistant (more or less) points on the curve.\n  */\nSpline.prototype.cacheSteps = function (mindist) {\n    var steps = [];\n    var laststep = this.pos(0);\n    steps.push(0);\n    for (var t = 0; t < this.duration; t += 10) {\n        var step = this.pos(t);\n        var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n        if (dist > mindist) {\n            steps.push(t);\n            laststep = step;\n        }\n    }\n    return steps;\n};\n\n  /*\n    returns angle and speed in the given point in the curve\n  */\nSpline.prototype.vector = function (t) {\n    var p1 = this.pos(t + 10);\n    var p2 = this.pos(t - 10);\n    return {\n        angle:180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n        speed:Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n};\n\n  /*\n    Gets the position of the point, given time.\n\n    WARNING: The speed is not constant. The time it takes between control points is constant.\n\n    For constant speed, use Spline.steps[i];\n  */\nSpline.prototype.pos = function (time) {\n\n    function bezier(t, p1, c1, c2, p2) {\n        var B = function (t) {\n            var t2 = t * t, t3 = t2 * t;\n            return [(t3), (3 * t2 * (1 - t)), (3 * t * (1 - t) * (1 - t)), ((1 - t) * (1 - t) * (1 - t))];\n        };\n        var b = B(t);\n        var pos = {\n            x : p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n            y : p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n            z : p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n        };\n        return pos;\n    }\n    var t = time - this.delay;\n    if (t < 0) t = 0;\n    if (t > this.duration) t = this.duration - 1;\n    //t = t-this.delay;\n    var t2 = (t) / this.duration;\n    if (t2 >= 1) return this.points[this.length - 1];\n\n    var n = Math.floor((this.points.length - 1) * t2);\n    var t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n};\n\nmodule.exports = Spline;\n"]},"metadata":{},"sourceType":"script"}